{"ast":null,"code":"import _objectSpread from \"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport ActionType from './actiontype';\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.INCREMENT:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case ActionType.DECREMENT:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case ActionType.ADD:\n      return _objectSpread({}, state, {\n        counter: state.counter + action.payload\n      });\n\n    case ActionType.SUBTRACT:\n      return _objectSpread({}, state, {\n        counter: state.counter - action.payload\n      });\n\n    case ActionType.RESET:\n      return _objectSpread({}, state, {\n        counter: 0\n      });\n\n    case \"STORE_RESULT\":\n      return _objectSpread({}, state, {\n        results: state.results.concat({\n          id: Date.now(),\n          value: state.counter\n        })\n      });\n\n    case \"DELETE_RESULT\":\n      return _objectSpread({}, state, {\n        results: state.results.filter(result => result.id !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:\\JT\\research-and-development\\Mern_App\\reactapp\\src\\store\\reducer.js"],"names":["ActionType","initialState","counter","results","reducer","state","action","type","INCREMENT","DECREMENT","ADD","payload","SUBTRACT","RESET","concat","id","Date","now","value","filter","result"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,CADO;AAEjBC,EAAAA,OAAO,EAAC;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAA+B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,UAAU,CAACQ,SAAhB;AACI,+BACOH,KADP;AAEIH,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgB;AAF9B;;AAIJ,SAAKF,UAAU,CAACS,SAAhB;AACI,+BACOJ,KADP;AAEIH,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgB;AAF9B;;AAIJ,SAAKF,UAAU,CAACU,GAAhB;AACI,+BACOL,KADP;AAEIH,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAFrC;;AAIJ,SAAKX,UAAU,CAACY,QAAhB;AACI,+BACOP,KADP;AAEIH,QAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAFrC;;AAIJ,SAAKX,UAAU,CAACa,KAAhB;AACI,+BACOR,KADP;AAEIH,QAAAA,OAAO,EAAG;AAFd;;AAIJ,SAAK,cAAL;AACI,+BACOG,KADP;AAEIF,QAAAA,OAAO,EAAGE,KAAK,CAACF,OAAN,CAAcW,MAAd,CAAqB;AAC3BC,UAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EADwB;AAE3BC,UAAAA,KAAK,EAAGb,KAAK,CAACH;AAFa,SAArB;AAFd;;AAOJ,SAAK,eAAL;AACI,+BACOG,KADP;AAEIF,QAAAA,OAAO,EAAGE,KAAK,CAACF,OAAN,CAAcgB,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcT,MAAM,CAACK,OAApD;AAFd;;AAIJ;AACI,aAAON,KAAP;AAxCR;AA0CH,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["import ActionType from './actiontype';\r\nconst initialState = {\r\n    counter : 0,\r\n    results:[]\r\n}\r\n\r\nconst reducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case ActionType.INCREMENT:\r\n            return {\r\n                ...state,\r\n                counter : state.counter + 1\r\n            }\r\n        case ActionType.DECREMENT:\r\n            return {\r\n                ...state,\r\n                counter : state.counter - 1\r\n            }\r\n        case ActionType.ADD:\r\n            return {\r\n                ...state,\r\n                counter : state.counter + action.payload\r\n            }\r\n        case ActionType.SUBTRACT:\r\n            return {\r\n                ...state,\r\n                counter : state.counter - action.payload\r\n            }\r\n        case ActionType.RESET:\r\n            return {\r\n                ...state,\r\n                counter : 0\r\n            }\r\n        case \"STORE_RESULT\":\r\n            return {\r\n                ...state,\r\n                results : state.results.concat({\r\n                    id:Date.now(),\r\n                    value : state.counter\r\n                })\r\n            }\r\n        case \"DELETE_RESULT\":\r\n            return {\r\n                ...state,\r\n                results : state.results.filter(result => result.id !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}