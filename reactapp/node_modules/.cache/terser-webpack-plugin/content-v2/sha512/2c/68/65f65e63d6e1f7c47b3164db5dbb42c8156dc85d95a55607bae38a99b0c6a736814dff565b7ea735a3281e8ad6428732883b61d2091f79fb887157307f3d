{"map":"{\"version\":3,\"sources\":[\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\node_modules\\\\file-loader\\\\dist\\\\cjs.js??ref--6-oneOf-7!D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\logo.svg\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\containers\\\\about\\\\aboutList.js\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\containers\\\\passion\\\\passion.js\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\containers\\\\about\\\\aboutAdd.js\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\App.js\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\serviceWorker.js\",\"D:\\\\JT\\\\research-and-development\\\\Mern_App\\\\reactapp\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"AboutList\",\"state\",\"aboutList\",\"react\",\"className\",\"react_router_dom\",\"to\",\"React\",\"PassionList\",\"passionList\",\"AddAbout\",\"App\",\"react_default\",\"a\",\"createElement\",\"react_router\",\"path\",\"exact\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8LCmBzBC,6MAhBXC,MAAQ,CACJC,UAAY,4EAGZ,OACIC,EAAA,cAAA,MAAA,CAAKC,UAAU,wBACXD,EAAA,cAAA,KAAA,KACIA,EAAA,cAAA,KAAA,KACIA,EAAA,cAACE,EAAA,EAAD,CAAMC,GAAG,oBAAT,qBATAC,EAAAA,WCYTC,6MAZXP,MAAQ,CACJQ,YAAc,4EAGd,OACIN,EAAA,cAAA,MAAA,CAAKC,UAAU,0BACXD,EAAA,cAAA,KAAA,KAAA,wBAPUI,EAAAA,WCALG,mLAEb,OACIP,EAAA,cAAA,MAAA,KACIA,EAAA,cAAA,KAAA,KAAA,gCAJsBI,EAAAA,uBCqBvBI,IAAAA,EAdf,WACE,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKV,UAAU,OACbQ,EAAAC,EAAAC,cAACT,EAAA,EAAD,KACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,OAAK,EAACC,UAAWlB,IAC7CY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,OAAK,EAACC,UAAWV,IAC9CI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,OAAK,EAACC,UAAWR,QCHtCS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import * as React from 'react';\\r\\nimport { Link } from 'react-router-dom'\\r\\nclass AboutList extends React.Component{\\r\\n    state = {\\r\\n        aboutList : []\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <div className=\\\"about-list-container\\\">\\r\\n                <ul>\\r\\n                    <li>\\r\\n                        <Link to=\\\"/admin/about/add\\\">Add New</Link>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default AboutList;\",\"import * as React from 'react';\\r\\nclass PassionList extends React.Component{\\r\\n    state = {\\r\\n        passionList : []\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <div className=\\\"passion-list-container\\\">\\r\\n                <h1>Passion List</h1>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default PassionList;\",\"import * as React from 'react';\\r\\nexport default class AddAbout extends React.Component{\\r\\n    render(){\\r\\n        return (\\r\\n            <div>\\r\\n                <h1>Add New About Screen</h1>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\nimport { BrowserRouter , Route , Switch } from 'react-router-dom';\\nimport AboutList from './containers/about/aboutList';\\nimport PassionList from './containers/passion/passion';\\nimport AddAbout from './containers/about/aboutAdd';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"App\\\">\\n      <BrowserRouter>\\n        <Switch>\\n          <Route path=\\\"/admin/about/\\\" exact component={AboutList} />\\n          <Route path=\\\"/admin/passion\\\" exact component={PassionList} />\\n          <Route path=\\\"/admin/about/add\\\" exact component={AddAbout} />\\n        </Switch>\\n      </BrowserRouter>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,t,n){e.exports=n(38)},27:function(e,t,n){},36:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},37:function(e,t,n){},38:function(e,t,n){\"use strict\";n.r(t);var a=n(0),c=n.n(a),o=n(19),r=n.n(o),i=(n(27),n(12)),l=n(5),u=n(6),s=n(7),m=n(9),d=n(8),p=n(10),b=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,c=new Array(a),o=0;o<a;o++)c[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(c)))).state={aboutList:[]},n}return Object(p.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return a.createElement(\"div\",{className:\"about-list-container\"},a.createElement(\"ul\",null,a.createElement(\"li\",null,a.createElement(i.b,{to:\"/admin/about/add\"},\"Add New\"))))}}]),t}(a.Component),h=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,c=new Array(a),o=0;o<a;o++)c[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(c)))).state={passionList:[]},n}return Object(p.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return a.createElement(\"div\",{className:\"passion-list-container\"},a.createElement(\"h1\",null,\"Passion List\"))}}]),t}(a.Component),f=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return a.createElement(\"div\",null,a.createElement(\"h1\",null,\"Add New About Screen\"))}}]),t}(a.Component);n(36),n(37);var v=function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(i.a,null,c.a.createElement(l.c,null,c.a.createElement(l.a,{path:\"/admin/about/\",exact:!0,component:b}),c.a.createElement(l.a,{path:\"/admin/passion\",exact:!0,component:h}),c.a.createElement(l.a,{path:\"/admin/about/add\",exact:!0,component:f}))))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(c.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[22,1,2]]]);","extractedComments":[]}